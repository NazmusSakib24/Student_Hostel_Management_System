1.
CREATE TABLE Users (
    UserID INT PRIMARY KEY IDENTITY,
    Username VARCHAR(50) NOT NULL,
    Password VARCHAR(50) NOT NULL,
    Role VARCHAR(10) NOT NULL,  -- 'Admin', 'Staff', 'Student'
);

2.
CREATE TABLE Admins (
    AdminID INT PRIMARY KEY IDENTITY,
    UserID INT,
    Name VARCHAR(100),
    FOREIGN KEY (UserID) REFERENCES Users(UserID)
);

3.
CREATE TABLE Staff (
    StaffID INT PRIMARY KEY IDENTITY,
    UserID INT,
    Name VARCHAR(100),
    Phone VARCHAR(20),
    FOREIGN KEY (UserID) REFERENCES Users(UserID)
);

4.
CREATE TABLE Students (
    StudentID INT PRIMARY KEY IDENTITY,
    UserID INT,
    Name VARCHAR(100),
    Phone VARCHAR(20),
    AssignedRoomID INT,
    FOREIGN KEY (UserID) REFERENCES Users(UserID),
    FOREIGN KEY (AssignedRoomID) REFERENCES Rooms(RoomID)
);

5.
CREATE TABLE Rooms (
    RoomID INT PRIMARY KEY IDENTITY,
    RoomNumber VARCHAR(20),
    Capacity INT,
    Status VARCHAR(20)  -- 'Available' or 'Occupied'
);

6.
CREATE TABLE UtilityBills (
    BillID INT PRIMARY KEY IDENTITY,
    RoomID INT,
    Month VARCHAR(20),
    Electricity FLOAT,
    Water FLOAT,
    Gas FLOAT,
    Status VARCHAR(20),  -- 'Paid' or 'Unpaid'
    FOREIGN KEY (RoomID) REFERENCES Rooms(RoomID)
);

7.
CREATE TABLE ServiceRequests (
    RequestID INT PRIMARY KEY IDENTITY,
    StudentID INT,
    RoomID INT,
    Type VARCHAR(50),  -- e.g., Electrical, Plumbing
    Description VARCHAR(MAX),
    Status VARCHAR(50) DEFAULT 'Pending',
    FOREIGN KEY (StudentID) REFERENCES Students(StudentID),
    FOREIGN KEY (RoomID) REFERENCES Rooms(RoomID)
);
